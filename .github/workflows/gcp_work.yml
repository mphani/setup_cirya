# This workflow will build a golang project
# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build exporter deb,rpm and tgz artifacts 

on: 
  push:
    # branches: [master]
    # TODO this combination logic of branch + tag is not working.
    tags:
       - v*
  workflow_dispatch:
    inputs:
      docker_tag: 
         description: Docker Tag
         required: false

permissions:
  id-token: write
  actions: write
  contents: write

jobs:
      
    job_build:
      runs-on: ubuntu-latest

      permissions:
         contents: 'read'
         id-token: 'write'    
      
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - id: 'auth'
          name: 'Authenticate to Google Cloud'
          uses: 'google-github-actions/auth@v1'
          with:
            create_credentials_file: true
            workload_identity_provider: "projects/136211202742/locations/global/workloadIdentityPools/phani-connector-workload-id-pool/providers/phani-connect-wid-provider"
            service_account: "phani-service-account-1@aerospike-engineering-blr.iam.gserviceaccount.com"
          
        # - uses: 'google-github-actions/auth@v2'
        #   with:
        #     project_id: "aerospike-engineering-blr"
        #     workload_identity_provider: "projects/136211202742/locations/global/workloadIdentityPools/phani-connector-workload-id-pool/attribute.repository/mphani/setup_cirya"
        #     service_account: "phani-service-account-1@aerospike-engineering-blr.iam.gserviceaccount.com"
            
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
          with:
              platforms: linux/${{ matrix.arch }}

        - uses: actions-ecosystem/action-get-latest-tag@v1
          id: get-latest-tag
                  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Upload Release Asset
          env:
#            GH_TOKEN: ${{ github.token }}
           TAG_NAME: "${{ steps.get-latest-tag.outputs.tag }}"
          run: |
             echo "tag_name $TAG_NAME"
             gcloud compute instances start phani-connect-cirya8 --zone us-central1-c
